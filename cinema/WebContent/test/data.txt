package cinema.admin.action;

import java.util.Map;

import org.apache.log4j.Logger;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.interceptor.SessionAware;

import cinema.util.Constants;
import cinema.common.BaseAction;
import cinema.dbaccess.DBAccess;
import cinema.domain.pojo.AdminInfo;

import com.opensymphony.xwork2.ActionSupport;

public class AdminLogin extends BaseAction {

	private static final long serialVersionUID = 1L;
	private static final Logger logger = Logger.getLogger(AdminLogin.class);

	private String uName;
	private String pWord;
	private boolean validated;
	private AdminInfo aInfo;

	public String getUName() {
		return uName;
	}

	public void setUName(String uName) {
		this.uName = uName;
	}

	public boolean isValidated() {
		return validated;
	}

	public void setValidated(boolean validated) {
		this.validated = validated;
	}

	public String getPWord() {
		return pWord;
	}

	public void setPWord(String pWord) {
		this.pWord = pWord;
	}

	@Override
	public void validate() {
		if (this.getUName() == null || this.getUName().equals("")) {
			addActionError(getText("login.error.blankusername"));
		}
		if (this.getPWord() == null || this.getPWord().equals("")) {
			addActionError(getText("login.error.blankpassword"));
		}
		if (!hasErrors()) {
			DBAccess dbObj = new DBAccess();
			aInfo = dbObj.checkUserLogin(uName, pWord);
			if (aInfo == null) {
				addActionError(getText("login.error.invalid"));
				this.setValidated(false);
			} else {
				this.setValidated(true);
			}
		} else {
			this.setValidated(false);
		}
	}

	@Override
	public String execute() throws Exception {
		try {
			if (this.isValidated()) {
				// ServletActionContext.getRequest().getSession().invalidate();
				// SET ADMIN SESSION
				//ServletActionContext.getRequest().getSession().setAttribute(ADMIN_HANDLE, this.aInfo);
				this.getSession().put(ADMIN_HANDLE, this.aInfo);
				
				//CHECK SESSION
//				if(ServletActionContext.getRequest().getSession().getAttribute(ADMIN_HANDLE) != null){
//					logger.info("SESSION DETAILS => " + this.aInfo + " SID => " + ServletActionContext.getRequest().getSession().getId() + " TIMEOUT => " + ServletActionContext.getRequest().getSession().getMaxInactiveInterval());
//				}
				if(this.getSession().get(ADMIN_HANDLE) != null){
					logger.info("SESSION DETAILS TESTING => " + ServletActionContext.getRequest().getSession().getAttribute(ADMIN_HANDLE) + " SID => " + ServletActionContext.getRequest().getSession().getId() + " TIMEOUT => " + ServletActionContext.getRequest().getSession().getMaxInactiveInterval());
				}
				return "success";
			} else {
				return "input";
			}
		} catch (Exception ex) {
			logger.error("Exception in AdminLogin::execute()\t!!" + ex);
			addActionError(getText("login.error.unable"));
			return "input";
		}
	}

//	@Override
//	public void setSession(Map<String, Object> session) {
//		userSession = session;
//	}
}


public class AdminLogin extends BaseAction {

	private static final long serialVersionUID = 1L;
	private static final Logger logger = Logger.getLogger(AdminLogin.class);

	public void validate() {
		if (this.getUName() == null || this.getUName().equals("")) {
			addActionError(getText("login.error.blankusername"));
		}
	}

	public String execute() throws Exception {
		try {
				return "success";
		} catch (Exception ex) {
			logger.error("Exception in ::execute()\t!!" + ex);
			addActionError(getText(""));
			return "input";
		}
	}
}

<!--<s:iterator value="patterns" status="ptr">
		<h1>
			<s:property/>
		</h1>
	</s:iterator>
	<s:select list="patterns" cssClass="dropList" headerKey="" headerValue="Select"></s:select>-->
	

<%@ page language="java" contentType="text/html; charset=ISO-8859-1" pageEncoding="ISO-8859-1"%>
<%@taglib uri="/struts-tags" prefix="s" %>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
    <title>Admin | Seat-Pattern</title>
    <%@ include file="/layout/adm/scripts.jsp" %>

    <script type="text/javascript">
		
	</script>
</head>
<body>
	<div class="type-legend">
	<s:iterator value="seattypes" status="stype">
		<div class="left">
		<s:property/>
		</div>
	</s:iterator>
	<div class="clear"></div>
	</div>
	
	<div class="seat-pattern-wrapper">
		<table class="seat-pattern-style">
			<s:iterator value="seatrows" status="srows">
			<tr>
				<td class="row-legend">
				<s:property value="no" />
				</td>
				<s:iterator value="cells" status="irows">
				<s:if test="status==0">
				<td></td>
				</s:if>
				<s:elseif test="status==1">
				<td class="blue clickable"><s:property value="no" /></td>
				</s:elseif>
				<s:elseif test="status==2">
				<td class="gray"><s:property value="no" /></td>
				</s:elseif>
				</s:iterator>
			</tr>
			</s:iterator>
		</table>
		<div class="screen-part">
			SCREEN
		</div>
	</div>
</body>
</html>


==========================================================================================
package test;

import ij.IJ;
import ij.ImagePlus;
import ij.ImageStack;
import ij.io.*;
import ij.process.ByteProcessor;
import ij.process.FloatProcessor;
import ij.process.ImageProcessor;
import ij.process.MedianCut;
import ij.process.ShortProcessor;
import ij.process.StackProcessor;

import java.awt.Image;
import java.io.File;

import org.apache.commons.io.FileUtils;
import org.apache.log4j.Logger;

import cinema.common.BaseAction;
import cinema.util.MimeTypeHelper;

public class upload extends BaseAction {
    private static final long serialVersionUID = 1L;
    private static final Logger logger = Logger.getLogger(upload.class);
    private File fileUpload;
    private String fileUploadContentType;
    private String fileUploadFileName;

    public String getFileUploadContentType() {
	return fileUploadContentType;
    }

    public void setFileUploadContentType(String fileUploadContentType) {
	this.fileUploadContentType = fileUploadContentType;
    }

    public String getFileUploadFileName() {
	return fileUploadFileName;
    }

    public void setFileUploadFileName(String fileUploadFileName) {
	this.fileUploadFileName = fileUploadFileName;
    }

    public File getFileUpload() {
	return fileUpload;
    }

    public void setFileUpload(File fileUpload) {
	this.fileUpload = fileUpload;
    }

    public String execute() throws Exception {
	System.out.println("fileUpload ==> " + fileUpload);
	System.out.println("fileUploadContentType ==> " + fileUploadContentType);
	System.out.println("fileUploadFileName ==> " + fileUploadFileName);
	MimeTypeHelper.isValidMimeType(VALID_IMAGE_TYPES, fileUploadContentType);
	// String filePath =
	// ServletActionContext.getServletContext().getRealPath("/posters");
	String filePath = getServletRequestObject().getSession().getServletContext().getRealPath(POSTER_FOLDER);
	System.out.println("file path ==> " + filePath);
	// File fileToCreate = new File(filePath, this.fileUploadFileName);
	File fileToCreate = File.createTempFile(POSTER_PREFIX, new MimeTypeHelper().getMimeTypeExtension(fileUploadContentType), new File(filePath));
	System.out.println("fileToCreate ==> " + fileToCreate);
	FileUtils.copyFile(this.fileUpload, fileToCreate);
	System.out.println("RESIZING");
	cropAndResize(fileToCreate.getAbsolutePath(), "thumb");
	return "success";
    }

    // public boolean CheckFileSize() {
    //
    // }

    public String display() {
	return NONE;
    }

    private String cropAndResize(String fileAbsolutePath, String fileSaveAsNameSuffix) {
	try {
	    Opener opener = new Opener();
	    ImagePlus imp = opener.openImage(fileAbsolutePath);
	    ImageProcessor ip = imp.getProcessor();
	    StackProcessor sp = new StackProcessor(imp.getStack(), ip);

	    int width = imp.getWidth();
	    int height = imp.getHeight();

	    int cropWidth = 0;
	    int cropHeight = 0;

	    if (width > height) {
		cropWidth = height;
		cropHeight = height;
	    } else {
		cropWidth = width;
		cropHeight = width;
	    }

	    int x = -1;
	    int y = -1;

	    if (width == height) {
		x = 0;
		y = 0;
	    } else if (width > height) {
		x = (width - height) / 2;
		y = 0;
	    } else if (width < height) {
		x = 0;
		y = (height - width) / 2;
	    }

	    logger.info(imp.getWidth());
	    logger.info(imp.getHeight());
	    logger.info("cropWidth " + cropWidth);
	    logger.info("cropHeight" + cropHeight);

	    // ImageStack croppedStack = sp.crop(x, y, cropWidth, cropHeight);
	    //
	    // imp.setStack(null, croppedStack);
	    //
	    // logger.info(imp.getWidth());
	    // logger.info(imp.getHeight());
	    //
	    // sp = new StackProcessor(imp.getStack(), imp.getProcessor());

	    // ImageStack resizedStack = sp.resize(100, 100, false);
	    // imp.setStack(null, resizedStack);

	    StringBuffer filePath = new StringBuffer(fileAbsolutePath);
	    filePath.replace(filePath.lastIndexOf("."), filePath.lastIndexOf("."), fileSaveAsNameSuffix);
	    String saveAsFilePath = filePath.toString();
//	    IJ.save(imp, saveAsFilePath);
	    IJ.save(makeThumbnail(imp, 100), saveAsFilePath);
	    return saveAsFilePath;
	} catch (Exception e) {
	    logger.error("Error while resizing Image.");
	    e.printStackTrace();
	    return null;
	}
    }

    ImagePlus makeThumbnail(ImagePlus imp, int thumbnailWidth) {
	if (imp == null)
	    return null;
	ImageProcessor ip = imp.getProcessor();
	int width = ip.getWidth();
	int height = ip.getHeight();
	if (imp.getType() == ImagePlus.COLOR_256)
	    ip = ip.convertToRGB();
	ip.smooth();
	ip.setInterpolate(true);
	//ImageProcessor ip2 = ip.resize(thumbnailWidth, thumbnailWidth * height / width);
	ImageProcessor ip2 = ip.resize(thumbnailWidth, thumbnailWidth, false);
	ip.reset();
	if (ip2 instanceof ShortProcessor || ip2 instanceof FloatProcessor)
	    ip2 = ip2.convertToByte(true);
	ip2 = reduceColors(ip2, 256);
	return new ImagePlus("Thumbnail", ip2);
    }

    ImageProcessor reduceColors(ImageProcessor ip, int nColors) {
	if (ip instanceof ByteProcessor && nColors == 256)
	    return ip;
	ip = ip.convertToRGB();
	MedianCut mc = new MedianCut((int[]) ip.getPixels(), ip.getWidth(), ip.getHeight());
	Image img = mc.convert(nColors);
	return (new ByteProcessor(img));
    }
}

INSERT INTO posters (movie_id, poster_thumb, main_flg, active_flg)
VALUES
(4,'/cinema/posters/HO00004430.jpg',1,1),
(4,'/cinema/posters/HO00004442.jpg',0,1),
(4,'/cinema/posters/HO00004491.jpg',0,1),
(4,'/cinema/posters/HO00004579.jpg',0,1),
(4,'/cinema/posters/HO00004648.jpg',0,1),
(4,'/cinema/posters/HO00004649.jpg',0,1),
(4,'/cinema/posters/HO00004649.jpg',0,1),
(3,'/cinema/posters/HO00004656.jpg',1,1),
(3,'/cinema/posters/HO00004649.jpg',0,1)


ELSE IF @para = 'EDIT'
	BEGIN
		IF EXISTS	(
						SELECT 1
						FROM	schedules
						WHERE	schedules.screen_id = @screen_id
						AND		schedules.movie_id = @movie_id
						AND		schedules.schedule_date = @schedule_date
						AND		schedules.schedule_time = @schedule_time
						AND		schedules.active_flg = 1
						AND		schedules.schedule_id <> @schedule_id
					)
		BEGIN
			SELECT -2;
		END
		ELSE
		BEGIN
			UPDATE	schedules
			SET		screen_id = @screen_id,
					movie_id = @movie_id,
					schedule_date = @schedule_date,
					schedule_time = @schedule_time
			WHERE	schedules.schedule_id = @schedule_id
		SELECT @movie_id;
		END
	END
	
	
	<%@ page language="java" contentType="text/html; charset=ISO-8859-1" pageEncoding="ISO-8859-1"%>
<%@taglib uri="/struts-tags" prefix="s" %>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
    <title>Admin | Schedule</title>
    <%@ include file="/layout/adm/scripts.jsp" %>
    <script type="text/javascript">
		
	</script>
</head>
<body>
<div class="completeWidth topFull">
    <div class="keepCenter topWrapper">
        <div class="topLeft">
            <!--HEADER-->
            <%@ include file="/layout/adm/header.jsp" %>
        </div>
        <div class="topBottom">
            <!--MENU-->
            <%@ include file="/layout/adm/menu.jsp" %>
        </div>
    </div>
</div>
<div class="completeWidth containtFull">
    <div class="keepCenter containtWrapper">
        <!--CONTENT-->
        <div class="content-box">
	        <div class="content-box-content">
	            <div class="error-info-Div">
					<ul class="errorList">
						<s:actionmessage />
						<s:actionerror />
					</ul>
				</div>
				<div class="schedule-wrapper">
					<div class="schedule-screen-wrapper">
						<div class="schedule-screen-header">
							<h3>Screen 1</h3>
						</div>
						<div class="schedule-screen-schedule-wrapper">
							<div class="schedule-screen-schedule-publish schedule-screen-schedule-fixed">
								<div class="schedule-screen-schedule-header">
									<label class="header">Friday 10/07/2012</label>
								</div>
								<div class="schedule-screen-schedule-body">
									<s:form id="frm_addscreen" name="frm_addscreen" action="screens-add-process" method="POST" theme="simple">
									    <table class="form_schedule">
									    	<tr>
									        	<td class="schedule-sr-cell" style="height:20px;">
									                <label class="header">#</label>
									            </td>
									            <td class="schedule-time-cell" style="height:20px;">
									                <label class="header">Show time</label>
									            </td>
									            <td class="schedule-movie-cell" style="height:20px;">
									                <label class="header">Movie</label>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <select class="dropList schedule-time">
									                	<option>12:00</option>
									                	<option>03:00</option>
									                	<option>06:00</option>
									                </select>
									            </td>
									            <td class="schedule-movie-cell">
									                <select class="dropList schedule-movie">
									                	<option>Dev D</option>
									                	<option>TigerTiger Tiger TigerTiger</option>
									                </select>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <select class="dropList schedule-time">
									                	<option>12:00</option>
									                	<option>03:00</option>
									                	<option>06:00</option>
									                </select>
									            </td>
									            <td class="schedule-movie-cell">
									                <select class="dropList schedule-movie">
									                	<option>Dev D</option>
									                	<option>TigerTiger Tiger TigerTiger</option>
									                </select>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <select class="dropList schedule-time">
									                	<option>12:00</option>
									                	<option>03:00</option>
									                	<option>06:00</option>
									                </select>
									            </td>
									            <td class="schedule-movie-cell">
									                <select class="dropList schedule-movie">
									                	<option>Dev D</option>
									                	<option>TigerTiger Tiger TigerTiger</option>
									                </select>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <select class="dropList schedule-time">
									                	<option>12:00</option>
									                	<option>03:00</option>
									                	<option>06:00</option>
									                </select>
									            </td>
									            <td class="schedule-movie-cell">
									                <select class="dropList schedule-movie">
									                	<option>Dev D</option>
									                	<option>TigerTiger Tiger TigerTiger</option>
									                </select>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <select class="dropList schedule-time">
									                	<option>12:00</option>
									                	<option>03:00</option>
									                	<option>06:00</option>
									                </select>
									            </td>
									            <td class="schedule-movie-cell">
									                <select class="dropList schedule-movie">
									                	<option>Dev D</option>
									                	<option>TigerTiger Tiger TigerTiger</option>
									                </select>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <select class="dropList schedule-time">
									                	<option>12:00</option>
									                	<option>03:00</option>
									                	<option>06:00</option>
									                </select>
									            </td>
									            <td class="schedule-movie-cell">
									                <select class="dropList schedule-movie">
									                	<option>Dev D</option>
									                	<option>TigerTiger Tiger TigerTiger</option>
									                </select>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <select class="dropList schedule-time">
									                	<option>12:00</option>
									                	<option>03:00</option>
									                	<option>06:00</option>
									                </select>
									            </td>
									            <td class="schedule-movie-cell">
									                <select class="dropList schedule-movie">
									                	<option>Dev D</option>
									                	<option>TigerTiger Tiger TigerTiger</option>
									                </select>
									            </td>
									        </tr>
									        <tr>
									            <td colspan="3" style="text-align:center; height: 40px;">
									            	<s:hidden/>
									                <s:submit cssClass="myButton" value="%{getText('common.save')}"></s:submit>
									            </td>
									        </tr>
									        <tr>
									            <td colspan="3" style="text-align:center;">
									                <div class="schedule-form-message">
									                	
									                </div>
									            </td>
									        </tr>
									    </table>
									</s:form>
								</div>
							</div>
							<div class="schedule-screen-schedule-view">
								<div class="schedule-screen-schedule-header">
									<label class="header">Friday 10/07/2012</label>
								</div>
								<div class="schedule-screen-schedule-body ">
									<table class="form_schedule">
									    	<tr>
									        	<td class="schedule-sr-cell" style="height:20px;">
									                <label class="header">#</label>
									            </td>
									            <td class="schedule-time-cell" style="height:20px;">
									                <label class="header">Show time</label>
									            </td>
									            <td class="schedule-movie-cell" style="height:20px;">
									                <label class="header">Movie</label>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="label-schedule" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <label class="label-schedule" for="">12:00</label>
									            </td>
									            <td class="schedule-movie-cell">
									                <label class="label-schedule" for="">TigerTiger Tiger TigerTiger</label>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="label-schedule" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <label class="label-schedule" for="">03:00</label>
									            </td>
									            <td class="schedule-movie-cell">
									                <label class="label-schedule" for="">Dev D</label>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <label class="label-schedule" for="">06:00</label>
									            </td>
									            <td class="schedule-movie-cell">
									                <label class="label-schedule" for="">TigerTiger Tiger TigerTiger</label>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <label class="label-schedule" for="">06:00</label>
									            </td>
									            <td class="schedule-movie-cell">
									                <label class="label-schedule" for="">TigerTiger Tiger TigerTiger</label>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="label-schedule" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <label class="label-schedule" for="">12:00</label>
									            </td>
									            <td class="schedule-movie-cell">
									                <label class="label-schedule" for="">TigerTiger Tiger TigerTiger</label>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="label-schedule" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <label class="label-schedule" for="">03:00</label>
									            </td>
									            <td class="schedule-movie-cell">
									                <label class="label-schedule" for="">Dev D</label>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <label class="label-schedule" for="">06:00</label>
									            </td>
									            <td class="schedule-movie-cell">
									                <label class="label-schedule" for="">TigerTiger Tiger TigerTiger</label>
									            </td>
									        </tr>
									        <tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for="">1</label>
									            </td>
									            <td class="schedule-time-cell">
									                <label class="label-schedule" for="">06:00</label>
									            </td>
									            <td class="schedule-movie-cell">
									                <label class="label-schedule" for="">TigerTiger Tiger TigerTiger</label>
									            </td>
									        </tr>
									    </table>
								</div>
							</div>
							<div class="schedule-screen-schedule-view schedule-screen-schedule-fixed bor">
								<div class="schedule-screen-schedule-header ">
									<label class="header1">Friday</label>
									<label class="header2">10/07/2012</label>
								</div>
								<div class="schedule-screen-schedule-body ">
									
								</div>
							</div>
							<div class="schedule-screen-schedule-view schedule-screen-schedule-fixed bor">
								<div class="schedule-screen-schedule-header ">
									<label class="header1">Friday</label>
									<label class="header2">10/07/2012</label>
								</div>
								<div class="schedule-screen-schedule-body ">
									
								</div>
							</div>
							<div class="schedule-screen-schedule-view schedule-screen-schedule-fixed bor">
								<div class="schedule-screen-schedule-header ">
									<label class="header1">Friday</label>
									<label class="header2">10/07/2012</label>
								</div>
								<div class="schedule-screen-schedule-body ">
									
								</div>
							</div>
							<div class="schedule-screen-schedule-view schedule-screen-schedule-fixed bor">
								<div class="schedule-screen-schedule-header ">
									<label class="header1">Friday</label>
									<label class="header2">10/07/2012</label>
								</div>
								<div class="schedule-screen-schedule-body ">
									
								</div>
							</div>
							<div class="schedule-screen-schedule-view schedule-screen-schedule-fixed bor">
								<div class="schedule-screen-schedule-header ">
									<label class="header1">Friday</label>
									<label class="header2">10/07/2012</label>
								</div>
								<div class="schedule-screen-schedule-body ">
									
								</div>
							</div>
							<div class="clear"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="clear"></div>
    </div>
    <div class="clear"></div>
</div>
<div class="completeWidth footerFull">
    <div class="keepCenter footerWrapper">
        <!--FOOTER-->
        <%@ include file="/layout/adm/footer.jsp" %>
    </div>
</div>
</body>
</html>




//		if (schedule.getScreenId().equals(screenId)) {
//		    if (schedule.getDate().equals(date)) {
//			currDaySchedule.getSchedules().add(schedule);
//		    } else {
//			if (currDaySchedule == null) {
//			    currDaySchedule = new DaySchedule();
//			    currDaySchedule.setDate(schedule.getDate());
//			    currDaySchedule.getSchedules().add(schedule);
//			    
//			    date = schedule.getDate();
//			} else {
//			    currScreenSchedule.getDaySchedules().add(currDaySchedule);
//			    currDaySchedule = new DaySchedule();
//			    currDaySchedule.setDate(schedule.getDate());
//			    currDaySchedule.getSchedules().add(schedule);
//			    
//			    currScreenSchedule.getDaySchedules().add(currDaySchedule);
//			    date = schedule.getDate();
//			}
//		    }
//		} else {
//		    if (currScreenSchedule == null) {
//			currScreenSchedule = new ScreenSchedule();
//			currScreenSchedule.setScreenId(schedule.getScreenId());
//			screenId = schedule.getScreenId();
//
//			currDaySchedule = new DaySchedule();
//			currDaySchedule.setDate(schedule.getDate());
//			currDaySchedule.getSchedules().add(schedule);
//			
//			currScreenSchedule.getDaySchedules().add(currDaySchedule);
//			date = schedule.getDate();
//			
//			if(!iterate.hasNext()) {
//			    this.screenSchedules.add(currScreenSchedule);
//			}
//		    } else {
//			this.screenSchedules.add(currScreenSchedule);
//			currScreenSchedule = new ScreenSchedule();
//			currScreenSchedule.setScreenId(schedule.getScreenId());
//			screenId = schedule.getScreenId();
//
//			currDaySchedule = new DaySchedule();
//			currDaySchedule.setDate(schedule.getDate());
//			currDaySchedule.getSchedules().add(schedule);
//			
//			currScreenSchedule.getDaySchedules().add(currDaySchedule);
//			date = schedule.getDate();
//		    }
//		}

<s:form id="frm_schedule" name="frm_schedule" action="screens-add-process" method="POST" theme="simple">
									    <table class="form_schedule">
									    	<tr>
									        	<td class="schedule-sr-cell" style="height:20px;">
									                <label class="header">#</label>
									            </td>
									            <td class="schedule-time-cell" style="height:20px;">
									                <label class="header">Show time</label>
									            </td>
									            <td class="schedule-movie-cell" style="height:20px;">
									                <label class="header">Movie</label>
									            </td>
									        </tr>
									        <s:iterator begin="0" end="6" var="rowSrNo">
											<tr>
									        	<td class="schedule-sr-cell">
									                <label class="labelClass" for=""><s:property value="#rowSrNo+1"/></label>
									            </td>
									            <td class="schedule-time-cell">
									                <s:select 
									                	name="timeSlots" id="timeSlots" cssClass="dropList schedule-time"  onchange="manageShowTimes(this);" headerKey="" headerValue="Select"
									                	list="#{  '1':'10:00 AM' , '2':'10:15 AM' , '3':'10:30 AM' , '4':'10:45 AM' , '5':'11:00 AM' , '6':'11:15 AM' , '7':'11:30 AM' , '8':'11:45 AM' , '9':'12:00 AM' , '10':'12:15 PM' ,
 																  '11':'12:30 PM' , '12':'12:45 PM' , '13':'01:00 PM' , '14':'01:15 PM' , '15':'01:30 PM' , '16':'01:45 PM' , '17':'02:00 PM' , '18':'02:15 PM' , '19':'02:30 PM' , '20':'02:45 PM' ,
 																  '21':'03:00 PM' , '22':'03:15 PM' , '23':'03:30 PM' , '24':'03:45 PM' , '25':'04:00 PM' , '26':'04:15 PM' , '27':'04:30 PM' , '28':'04:45 PM' , '29':'05:00 PM' , '30':'05:15 PM' ,
 																  '31':'05:30 PM' , '32':'05:45 PM' , '33':'06:00 PM' , '34':'06:15 PM' , '35':'06:30 PM' , '36':'06:45 PM' , '37':'07:00 PM' , '38':'07:15 PM' , '39':'07:30 PM' , '40':'07:45 PM' ,
 																  '41':'08:00 PM' , '42':'08:15 PM' , '43':'08:30 PM' , '44':'08:45 PM' , '45':'09:00 PM' , '46':'09:15 PM' , '47':'09:30 PM' , '48':'09:45 PM' , '49':'10:00 PM' , '50':'10:15 PM' ,
 																  '51':'10:30 PM' , '52':'10:45 PM' , '53':'11:00 PM' , '54':'11:15 PM' , '55':'11:30 PM' , '56':'11:45 PM' , '57':'00:00 AM' }"
									                ></s:select>
									            </td>
									            <td class="schedule-movie-cell">
									                <s:select name="movieId" id="movieId" list="moviesList" cssClass="dropList schedule-movie" headerKey="" headerValue="Select"></s:select>
									            </td>
									        </tr>
											</s:iterator>
									        <tr>
									            <td colspan="3" style="text-align:center; height: 40px;">
									            	<s:hidden/>
									                <s:submit cssClass="myButton" value="%{getText('schedule.schedule')}"></s:submit>
									            </td>
									        </tr>
									        <tr>
									            <td colspan="3" style="text-align:center;">
									                <div class="schedule-form-message">
									                	
									                </div>
									            </td>
									        </tr>
									    </table>
									</s:form>
									
public void setTimeSlots() {
	this.timeSlots.put(1, "10:00 AM");
	this.timeSlots.put(2, "10:15 AM");
	this.timeSlots.put(3, "10:30 AM");
	this.timeSlots.put(4, "10:45 AM");
	this.timeSlots.put(5, "11:00 AM");
	this.timeSlots.put(6, "11:15 AM");
	this.timeSlots.put(7, "11:30 AM");
	this.timeSlots.put(8, "11:45 AM");
	this.timeSlots.put(9, "12:00 AM");
	this.timeSlots.put(10, "12:15 PM");
	this.timeSlots.put(11, "12:30 PM");
	this.timeSlots.put(12, "12:45 PM");
	this.timeSlots.put(13, "01:00 PM");
	this.timeSlots.put(14, "01:15 PM");
	this.timeSlots.put(15, "01:30 PM");
	this.timeSlots.put(16, "01:45 PM");
	this.timeSlots.put(17, "02:00 PM");
	this.timeSlots.put(18, "02:15 PM");
	this.timeSlots.put(19, "02:30 PM");
	this.timeSlots.put(20, "02:45 PM");
	this.timeSlots.put(21, "03:00 PM");
	this.timeSlots.put(22, "03:15 PM");
	this.timeSlots.put(23, "03:30 PM");
	this.timeSlots.put(24, "03:45 PM");
	this.timeSlots.put(25, "04:00 PM");
	this.timeSlots.put(26, "04:15 PM");
	this.timeSlots.put(27, "04:30 PM");
	this.timeSlots.put(28, "04:45 PM");
	this.timeSlots.put(29, "05:00 PM");
	this.timeSlots.put(30, "05:15 PM");
	this.timeSlots.put(31, "05:30 PM");
	this.timeSlots.put(32, "05:45 PM");
	this.timeSlots.put(33, "06:00 PM");
	this.timeSlots.put(34, "06:15 PM");
	this.timeSlots.put(35, "06:30 PM");
	this.timeSlots.put(36, "06:45 PM");
	this.timeSlots.put(37, "07:00 PM");
	this.timeSlots.put(38, "07:15 PM");
	this.timeSlots.put(39, "07:30 PM");
	this.timeSlots.put(40, "07:45 PM");
	this.timeSlots.put(41, "08:00 PM");
	this.timeSlots.put(42, "08:15 PM");
	this.timeSlots.put(43, "08:30 PM");
	this.timeSlots.put(44, "08:45 PM");
	this.timeSlots.put(45, "09:00 PM");
	this.timeSlots.put(46, "09:15 PM");
	this.timeSlots.put(47, "09:30 PM");
	this.timeSlots.put(48, "09:45 PM");
	this.timeSlots.put(49, "10:00 PM");
	this.timeSlots.put(50, "10:15 PM");
	this.timeSlots.put(51, "10:30 PM");
	this.timeSlots.put(52, "10:45 PM");
	this.timeSlots.put(53, "11:00 PM");
	this.timeSlots.put(54, "11:15 PM");
	this.timeSlots.put(55, "11:30 PM");
	this.timeSlots.put(56, "11:45 PM");
	this.timeSlots.put(57, "00:00 AM");
    }